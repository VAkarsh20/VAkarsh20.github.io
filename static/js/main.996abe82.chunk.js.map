{"version":3,"sources":["components/PageHeader.js","components/Volunteer.js","components/InterviewLocations.js","components/Days.js","components/Virtual.js","images/student.png","components/Information.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["PageHeader","props","className","style","backgroundImage","src","React","Component","Volunteer","id","href","Days","Information","Footer","title","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8MA0DeA,E,kDAvDb,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,OACE,qBAAKC,UAAU,YAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,qBACEA,UAAU,eACVC,MAAO,CACLC,gBAAgB,2BAAD,OACX,oDADW,4BAMrB,qBAAKF,UAAU,4BAAf,SACE,qBACEA,UAAU,kBACVC,MAAO,CACLC,gBAAgB,2BAAD,OACX,oDADW,4BAMrB,qBAAKF,UAAU,4BAAf,SACE,qBACEA,UAAU,kBACVC,MAAO,CACLC,gBAAgB,2BAAD,OACX,oDADW,4BAMrB,sBAAKF,UAAU,aAAf,UACE,qBAAKG,IAAI,0BACT,sBAAKH,UAAU,YAAf,oBACS,sBAAMA,UAAU,SAAhB,8BAET,sBAAKA,UAAU,gBAAf,UACE,qEAEA,4F,GA/CWI,IAAMC,WCyBhBC,GCzBkBF,IAAMC,U,kDDCrC,WAAYN,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIO,GAAG,iBAAP,gCACA,qBAAKP,UAAU,OAAf,8PAIA,mBAAGQ,KAAK,0BAAR,oBACA,mBAAGA,KAAK,wCAAR,sBACA,mBAAGA,KAAK,+CAAR,uBACA,mBAAGA,KAAK,+BAAR,oBACA,qBAAKR,UAAU,cAAf,8E,GAjBgBI,IAAMC,YEqBfI,GCrBOL,IAAMC,U,kDDC1B,WAAYN,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIO,GAAG,iBAAP,sBACA,qBAAKP,UAAU,OAAf,qGAIA,oBAAGQ,KAAK,wCAAR,wBAA2D,uBAA3D,iCACA,oBAAGA,KAAK,6DAAR,4CAAoG,uBAApG,yBACA,oBAAGA,KAAK,4CAAR,qBAA4D,uBAA5D,oC,GAfWJ,IAAMC,YEFV,ICiBAK,MAbf,WACE,OACE,gCACE,oBAAIH,GAAG,iBAAP,mBACA,qBAAKP,UAAU,cAAf,SACE,qBAAKA,UAAU,OAAf,kRCSOW,E,kDAfb,WAAYZ,GAAQ,uCACZA,G,0CAGR,WACE,OACE,sBAAKC,UAAU,SAAf,8CAEE,uBACA,iDAAmB,mBAAGQ,KAAK,0BAA0BI,MAAM,UAAxC,qBAAnB,SAAsF,mBAAGJ,KAAK,4BAA4BI,MAAM,WAA1C,wC,GAVzER,IAAMC,WC4BZQ,MArBf,WACE,OACE,sBAAKb,UAAU,eAAf,UACE,gCACE,qBAAKA,UAAU,UAAUG,IAAI,0BAC7B,mBAAGK,KAAK,+BAAR,SACE,qBAAKR,UAAU,aAAaG,IAAI,0BAElC,mBAAGK,KAAK,wCAAR,SACE,qBAAKR,UAAU,aAAaG,IAAI,+BAGpC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCbcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.996abe82.chunk.js","sourcesContent":["import React from \"react\";\n\nclass PageHeader extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"wave-info\">\n        <div className=\"waveWrapper waveAnimation\">\n          <div className=\"waveWrapperInner bgTop\">\n            <div\n              className=\"wave waveTop\"\n              style={{\n                backgroundImage: `url(\n                  ${\"http://front-end-noobs.com/jecko/img/wave-top.png\"}\n                )`\n              }}\n            />\n          </div>\n          <div className=\"waveWrapperInner bgMiddle\">\n            <div\n              className=\"wave waveMiddle\"\n              style={{\n                backgroundImage: `url(\n                  ${\"http://front-end-noobs.com/jecko/img/wave-mid.png\"}\n                )`\n              }}\n            />\n          </div>\n          <div className=\"waveWrapperInner bgBottom\">\n            <div\n              className=\"wave waveBottom\"\n              style={{\n                backgroundImage: `url(\n                  ${\"http://front-end-noobs.com/jecko/img/wave-bot.png\"}\n                )`\n              }}\n            />\n          </div>\n          <div className=\"info-facts\">\n            <img src=\"./images/headshot.png\"></img>\n            <div className=\"main-logo\">\n              Akarsh <span className=\"orange\">Vankayalapati</span>\n            </div>\n            <div className=\"date-location\">\n              <div>Master of Computer Science Student</div>\n\n              <div>University of Illinois at Urbana-Champaign</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PageHeader;\n","import React from \"react\";\n\nclass Volunteer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"volunteer\">\n        <h2 id=\"content_header\">Resume & Portfolio</h2>\n        <div className=\"info\">\n          The links provided below are my current resume and profiles on LinkedIn, Handshake, and GitHub. The first three links are great snapshots into my academic and professional career, and the last link is a great look into my personal projects.\n\n        </div>\n        <a href=\"../documents/resume.pdf\">Resume</a>\n        <a href=\"https://www.linkedin.com/in/akarsh-v/\">LinkedIn</a>\n        <a href=\"https://app.joinhandshake.com/users/13330541\">Handshake</a>\n        <a href=\"https://github.com/VAkarsh20\">GitHub</a>\n        <div className=\"info orange\">\n          Contact akarshv2@illinois.edu with any serious inquiries.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Volunteer;\n","import React from \"react\";\n\nclass InterviewLocations extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"interviewlocations\">\n        <h2 id=\"content_header\">interview locations</h2>\n        <div className=\"info\">\n          Below are interview handbooks based on each specific interview\n          location. Click the link below to download the handbook.\n        </div>\n        <a href=\"../interview-handbooks/DCL.pdf\" download>\n          Digital Computer Labratory\n        </a>\n        <a href=\"../interview-handbooks/Illini-Union.pdf\" download>\n          Illini Union\n        </a>\n        <a href=\"../interview-handbooks/Memorial-Stadium.pdf\" download>\n          Memorial Stadium\n        </a>\n        <a href=\"../interview-handbooks/The-Career-Center.pdf\" download>\n          The Career Center\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default InterviewLocations;\n","import React from \"react\";\r\n\r\nclass Days extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"days\">\r\n        <h2 id=\"content_header\">Projects</h2>\r\n        <div className=\"info\">\r\n        Below are links to some of the personal projects Akarsh has implemented/been a part of:\r\n        </div>\r\n\r\n        <a href=\"https://github.com/VAkarsh20/FoodKeep\"> Food Keep <br/> Java (Android Application)</a>\r\n        <a href=\"https://vakarsh20.github.io/Movie_Narrative_Visualization/\"> Movie Narrative Visualization <br/> Javascript (D3.js)</a>\r\n        <a href=\"https://github.com/VAkarsh20/CS411_ShArea\"> ShArea <br/> Python and SQL (Flask)</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Days;","import React from \"react\";\r\n\r\nclass Virtual extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    const alertFunction = () => {alert(\"Recording for this session will be published after the next live session.\\nClick OK to go to the session's slide deck.\"); }\r\n\r\n    return (\r\n      <div className=\"virtual\">\r\n        <h2 id=\"content_header\">Virtual Career Fair Information</h2>\r\n        <div className=\"info\">\r\n          This year's career fair will be hosted virtually through CareerEco!\r\n          Below are two tutorials to help you set up your CareerEco account and navigate the website.\r\n        </div>\r\n\r\n        <a href=\"../tutorials/tutorial1.pdf\">Tutorial 1</a>\r\n        <a href=\"../tutorials/tutorial2.pdf\">Tutorial 2</a>\r\n      \r\n\r\n\r\n        <div className=\"info\">\r\n          Additionally, EXPO Committee will be hosting a Zoom session to answer outstanding student questions and offer some advice for success at an online career fair!\r\n          The link to the resources from both sessions are below.\r\n        </div>\r\n\r\n        <a href=\"https://illinois.joinhandshake.com/events/658230\">February 3rd<br/> 6:00 pm CDT</a>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Virtual;\r\n\r\n// Only 1 Session\r\n// <a href=\"https://drive.google.com/drive/folders/1q68e6ZY8tUQ5zqptYaK-F7wHARJwdcwO?usp=sharing\">September 7th <br/>6:30 pm CDT</a>\r\n","export default __webpack_public_path__ + \"static/media/student.3f2d9389.png\";","import React from \"react\";\nimport student from \"../images/student.png\";\nimport company from \"../images/company.png\";\n\nfunction Information() {\n  return (\n    <div>\n      <h1 id=\"content_header\">About</h1>\n      <div className=\"information\">\n        <div className=\"info\">\n        Akarsh is a BS-MCS Computer Science student at the University of Illinois at Urbana-Champaign currently interning for Capital One as a Software Engineering Intern. He has experience programming in Python, C/C++, and Java through internships and academia.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Information;\n","import React from \"react\";\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"footer\">\n        Organized by Akarsh Vankayalapati\n        <br />\n        <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport PageHeader from \"./PageHeader\";\nimport InterviewLocations from \"./InterviewLocations\";\nimport Volunteer from \"./Volunteer\";\nimport Virtual from \"./Virtual\";\nimport Days from \"./Days\";\nimport Information from \"./Information\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div className=\"body-content\">\n      <nav>\n        <img className=\"navlogo\" src=\"./images/illinois.png\"></img>\n        <a href=\"https://github.com/VAkarsh20\">\n          <img className=\"sociallink\" src=\"./images/github.svg\"></img>\n        </a>\n        <a href=\"https://www.linkedin.com/in/akarsh-v/\">\n          <img className=\"sociallink\" src=\"./images/linkedin.svg\"></img>\n        </a>\n      </nav>\n      <PageHeader />\n      <Information />\n      <Days />\n      <Volunteer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// Original Order\n// <PageHeader />\n// <Information />\n// <InterviewLocations />\n// <Volunteer />\n// <Footer />\n//\n// New Order\n// <PageHeader />\n// <Information />\n// <Days />\n// <Virtual />\n// <Footer />\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/style.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}